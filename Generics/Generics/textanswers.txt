1.Describe the problem generics address.
It allows class, methods to work with any type ensuring type safety
eliminates need for typecasting, reduces code duplication allows same to work with multiple dtypes

2. How would you create a list of strings, using the generic List class?
List<string> l = new List<string>();

3. How many generic type parameters does the Dictionary class have?
two
Ex: Dictionary<TKey, TValue)

4. True/False. When a generic class has multiple type parameters, they must all match.
False, Can be different

5. What method is used to add items to a List object?
l.add(value)

6. Name two methods that cause items to be removed from a List.
l.Remove(T item)
l.RemoveAt(int index) - index

7. How do you indicate that a class has a generic type parameter?
<> - ex: public class Program<T> {}

8. True/False. Generic classes can only have one generic type parameter.
False. public class Box<T,U> {}

9. True/False. Generic type constraints limit what can be used for the generic type.
True. Can be a ref, val, interface

10. True/False. Constraints let you use the methods of the thing you are constraining to.
True
